<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"

	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- Bean -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/wrong_set?useSSL=false" p:user="root"
		p:password="tvvt14005" p:maxPoolSize="40" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="20"  />

    <bean id="wrongSetTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource" />
    <tx:annotation-driven transaction-manager="wrongSetTransactionManager" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="mappingResources">
			<list>
				<value>model/User.hbm.xml</value>
				<value>model/Question.hbm.xml</value>
				<value>model/UQ_Library.hbm.xml</value>
				<value>model/Record.hbm.xml</value>
			</list>
		</property>
		<!-- Hibernate SessionFactory -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.enable_lazy_load_no_trans=true
                javax.persistence.validation.mode=none
			</value>
		</property>
	</bean>

	<!-- DAO Bean -->
	<bean id="userDao" class="dao.impl.UserDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="questionDao" class="dao.impl.QuestionDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="libraryDao" class="dao.impl.LibraryDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
        <property name="redisTemplate" ref="redisTemplate"/>
	</bean>
	<bean id="recordDao" class="dao.impl.RecordDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Service -->
	<bean id="appService" class="service.impl.AppServiceImpl">
		<!-- DAO -->
		<property name="userDao" ref="userDao"/>
		<property name="questionDao" ref="questionDao"/>
		<property name="libraryDao" ref="libraryDao"/>
		<property name="recordDao" ref="recordDao"/>
	</bean>

    <bean id="buyLogProducer" class="message.BuyLogProducer">

    </bean>

	<!-- HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- appService Bean -->
		<aop:pointcut id="beanPointcut" expression="bean(appService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="beanPointcut" />
	</aop:config>



    <!-- redis连接池 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="600" />
        <property name="maxIdle" value="300" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <!-- 连接池配置，类似数据库连接池 -->
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="127.0.0.1"/>
        <property name="port" value="6379"/>
        <!-- <property name="password" value="${redis.pass}"></property> -->
        <property name="poolConfig" ref="poolConfig"/>
    </bean>


    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="jedisConnectionFactory" />

        <property name="keySerializer" >
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="true"/>
    </bean >

	<bean id="elasticClient" class="search.config.ElasticClient"/>

	<bean id="searchAnswer" class="search.SearchAnswer">
		<property name="elasticClient" ref="elasticClient"/>
	</bean>

	<bean id="personSocial" class="neo4j.PersonSocial"/>
</beans>